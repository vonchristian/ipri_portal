<div class="px-4 sm:px-6 md:px-12 lg:px-20">

  <div class="md:col-span-6 mt-6 ml-0 sm:ml-2">
    <!-- Header and Download Button -->
    <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center gap-3">
      <h1 class="text-2xl font-semibold text-gray-900 mb-0">Key Data Points</h1>
      <%= link_to 'Download', documenters_dashboard_index_path(format: 'xlsx'), class:"py-2 px-5 text-sm font-semibold text-gray-900 bg-white border border-gray-300 rounded-md hover:bg-gray-100 hover:text-blue-700 transition" %>
    </div>

    <!-- Summary Pills Grid -->
    <div class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-4 gap-5 mt-5">
      <% summary_data = [
        { path: "/documenters/case_details", label: "Total Cases", count: @dashboard[:case_details_count], sub: @dashboard[:current_year_case_details_count], color: "bg-red-100 text-red-700" },
        { path: "/criminalizations", label: "Criminalizations", count: @dashboard[:criminalizations_count], sub: @dashboard[:current_year_criminalizations_count], color: "bg-yellow-100 text-yellow-700" },
        { path: "/killings", label: "Killings", count: @dashboard[:killings_count], sub: @dashboard[:current_year_killings_count], color: "bg-blue-100 text-blue-700" },
        { path: "/human_rights_violations", label: "Other Violations", count: @dashboard[:human_rights_violations_count], sub: @dashboard[:current_year_human_rights_violations_count], color: "bg-green-100 text-green-700" }
      ] %>

      <% summary_data.each do |item| %>
        <a href="<%= item[:path] %>" class="p-5 rounded-xl border border-gray-200 hover:shadow-md transition bg-white flex flex-col justify-between">
          <div class="flex flex-col gap-1">
            <div class="text-xs font-semibold text-gray-500 uppercase tracking-wide"><%= item[:label] %></div>
            <div class="text-3xl font-extrabold text-gray-900 leading-tight"><%= item[:count] %></div>
            <div class="text-xs <%= item[:color] %> rounded-full px-3 py-1 w-fit mt-2 font-semibold">
              <%= item[:sub] %> this year
            </div>
          </div>
        </a>
      <% end %>
    </div>
  </div>

  <div class="border-t border-gray-200 mt-6 mb-6"></div>

  <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <!-- Leaderboard Column -->
    <div class="lg:col-span-1">
      <h2 class="text-2xl font-semibold text-gray-800 mb-6">Human Rights Violations</h2>
      <ul class="space-y-3">
        <% @dashboard[:human_rights_violations].sort_by(&:sort_order).each_with_index do |item, index| %>
          <li class="flex justify-between items-center bg-white border border-gray-200 rounded-lg px-5 py-4 shadow-sm hover:bg-gray-50 transition">
            <%= link_to item.title, documenters_case_details_path(category_id: item.id, category_class: item.category_class), class: "text-gray-900 font-semibold hover:underline text-base" %>
            <span class="text-xl font-bold text-gray-800"><%= item.count %></span>
          </li>
        <% end %>
      </ul>
    </div>

   <!-- Charts Column -->
<div class="lg:col-span-2 space-y-8 ml-5">
  <h2 class="text-2xl font-semibold text-gray-800">Individual Victims</h2>

  <!-- Both charts stacked vertically -->
  <div class="flex flex-col gap-8">

    <div>
      <h3 class="font-semibold text-gray-900 mb-4 flex items-center gap-4 text-lg">
        By Gender
        <% total_victims = Victims::IndividualVictim.count %>
        <span class="inline-block bg-blue-100 text-blue-800 text-xs font-semibold px-3 py-1 rounded-full whitespace-nowrap">
          Total: <%= total_victims %>
        </span>
      </h3>

      <% gender_counts = Victims::IndividualVictim.group(:gender).count %>

      <% male_count = gender_counts["male"] || 0 %>
      <% female_count = gender_counts["female"] || 0 %>
      <% lgbtqia_count = gender_counts["lgbtqia"] || 0 %>

      <% total_count = Victims::IndividualVictim.count.nonzero? || 1 %>
      <% others_count = total_count - male_count - female_count - lgbtqia_count %>
      <% others_count = 0 if others_count.negative? %>

      <% segments = [
        { label: "Male", count: male_count, color: "bg-blue-600" },
        { label: "Female", count: female_count, color: "bg-pink-600" },
        { label: "LGBTQIA", count: lgbtqia_count, color: "bg-purple-600" },
        { label: "No Information", count: others_count, color: "bg-gray-400" }
      ] %>

      <div class="w-full bg-gray-200 rounded-lg h-8 overflow-hidden flex shadow-inner">
        <% segments.each do |segment| %>
          <% next if segment[:count] == 0 %>
          <% width_percent = (segment[:count].to_f / total_count) * 100 %>
          <div
            class="<%= segment[:color] %> h-8"
            style="width: <%= width_percent %>%;"
            title="<%= "#{segment[:label]}: #{segment[:count]} (#{width_percent.round(1)}%)" %>"
          ></div>
        <% end %>
      </div>

      <div class="flex flex-wrap justify-start gap-6 mt-4 text-sm text-gray-700 font-medium">
        <% segments.each do |segment| %>
          <% next if segment[:count] == 0 %>
          <div class="flex items-center space-x-2 whitespace-nowrap">
            <div class="w-5 h-5 <%= segment[:color] %> rounded"></div>
            <span><%= segment[:label] %> (<%= segment[:count] %>)</span>
          </div>
        <% end %>
      </div>
    </div>

    <div>
      <h3 class="font-semibold text-gray-900 mb-2 text-lg">By Age Bracket</h3>
      <%= bar_chart AgeBracket.chart_data, height: '280px' %>
    </div>

  </div>
</div>

</div>
  <header class="pt-12">
    <h1 class="text-xl font-bold text-gray-900 mb-6">Cases By Country</h1>
  </header>
  <div class="border-t border-gray-200 mb-8"></div>
  <div id="geo_chart_div" class="w-full max-w-[1300px] h-[800px] mx-auto"></div>

</div>

<script src="https://www.gstatic.com/charts/loader.js"></script>
<script>
  google.charts.load('current', { packages: ['geochart'] });
  google.charts.setOnLoadCallback(drawRegionsMap);

  var countryMap = {
    <% Country.all.each_with_index do |country, idx| %>
      "<%= j country.name %>": "<%= country.id %>"<%= ',' unless idx == Country.count - 1 %>
    <% end %>
  };

  var countryShowUrlTemplate = "<%= country_path('__ID__') %>";

  function drawRegionsMap() {
    var data = google.visualization.arrayToDataTable([
      ['Country', 'Cases', { role: 'tooltip', p: {html: true} }],
      <% CaseDetails::CaseDetail
          .joins(:country)
          .group('countries.name', 'countries.id', 'countries.killings_count', 'countries.criminalizations_count', 'countries.human_rights_violations_count')
          .select('countries.name, countries.id, countries.killings_count, countries.criminalizations_count, countries.human_rights_violations_count, COUNT(case_details.id) as cases_count')
          .each do |record| %>
        [
          '<%= j record.name %>', 
          <%= record.cases_count %>, 
          `<div style="min-width: 150px; padding: 2px;">
             Cases: <%= record.cases_count %><br>
             Killings: <%= record.killings_count || 0 %><br>
             Criminalizations: <%= record.criminalizations_count || 0 %><br>
             Other Violations: <%= record.human_rights_violations_count || 0 %>
           </div>`
        ]<%= ',' unless record == CaseDetails::CaseDetail.last %>
      <% end %>
    ]);

    var options = {
      colorAxis: { colors: ["#ffd6d6", "#8A0303"] },
      backgroundColor: '#f9fafb',
      datalessRegionColor: '#eee',
      tooltip: { isHtml: true },
      legend: 'none'
    };

    var chart = new google.visualization.GeoChart(document.getElementById('geo_chart_div'));

    google.visualization.events.addListener(chart, 'select', function () {
      var selection = chart.getSelection();
      if (selection.length) {
        var selectedItem = selection[0];
        var countryName = data.getValue(selectedItem.row, 0);
        var countryId = countryMap[countryName];
        if (countryId) {
          window.location.href = countryShowUrlTemplate.replace('__ID__', countryId);
        }
      }
    });

    chart.draw(data, options);
  }

  window.addEventListener('resize', drawRegionsMap);
</script>
